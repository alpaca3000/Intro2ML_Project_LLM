import streamlit as st
from services.translate import evaluate_translation, get_wordnet_info
from utils.session import is_logged_in

# # T·∫£i d·ªØ li·ªáu WordNet (ch·ªâ ch·∫°y l·∫ßn ƒë·∫ßu)
# if not os.path.exists('./nltk_data'):
#     nltk.download('wordnet', download_dir='./nltk_data')
#     nltk.download('punkt', download_dir='./nltk_data')
# nltk.data.path.append('./nltk_data')

# Kh·ªüi t·∫°o bi·∫øn session
for key in ["percentage_correct", "model_translation", "show_result"]:
    if key not in st.session_state:
        st.session_state[key] = None if key != "show_result" else False

# Ti√™u ƒë·ªÅ trang
st.title("ƒê√°nh gi√° kh·∫£ nƒÉng d·ªãch c·ªßa b·∫°n")

# Ki·ªÉm tra ƒëƒÉng nh·∫≠p
if not is_logged_in():
    st.warning("B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ th·ª±c hi·ªán ch·ª©c nƒÉng n√†y.")
    st.stop()

st.sidebar.title(f"Xin ch√†o {st.session_state.username}!")

# Nh·∫≠p vƒÉn b·∫£n
english_text = st.text_area("Nh·∫≠p vƒÉn b·∫£n ti·∫øng Anh:", "hello world!")

# # Ki·ªÉm tra xem vƒÉn b·∫£n c√≥ ph·∫£i l√† t·ª´ ƒë∆°n ƒë·ªÉ th√™m WordNet
# if len(english_text.split()) == 1:  # N·∫øu l√† t·ª´ ƒë∆°n
#     wordnet_info = get_wordnet_info(english_text)
#     if wordnet_info:
#         with st.expander("Th√¥ng tin t·ª´ ƒëi·ªÉn (WordNet)"):
#             st.write(f"**ƒê·ªãnh nghƒ©a (English):** {wordnet_info['definition']}")
#             st.write(f"**V√≠ d·ª• (English):** {wordnet_info['examples']}")
#             st.write(f"**T·ª´ ƒë·ªìng nghƒ©a (English):** {wordnet_info['synonyms']}")

# N·∫øu ch∆∞a c√≥ k·∫øt qu·∫£, cho nh·∫≠p b·∫£n d·ªãch
# if not st.session_state.show_result:
user_input = st.text_area("Nh·∫≠p b·∫£n d·ªãch c·ªßa b·∫°n:")

blank_col, eval_col = st.columns([3, 1])
with eval_col:
    if st.button("ƒê√°nh gi√°", use_container_width=True, icon="üîç", disabled=(not user_input.strip())):
        st.session_state.show_result = True

if st.session_state.show_result:
    with st.spinner("ƒêang ƒë√°nh gi√° b·∫£n d·ªãch..."):  # Th√™m spinner
        percent, translation = evaluate_translation(english_text, user_input)
        st.session_state.percentage_correct = percent
        st.session_state.model_translation = translation
        #st.session_state.show_result = False

# K·∫øt qu·∫£ sau khi ƒë√°nh gi√°
if st.session_state.show_result:
    st.session_state.show_result = False
    percent = st.session_state.percentage_correct
    if percent >= 80:
        st.info(f"B·∫£n d·ªãch c·ªßa b·∫°n c√≥ ƒë·ªô ch√≠nh x√°c cao v·ªõi ƒë·ªô ph√π h·ª£p {percent:.2f}%")
    elif percent >= 50:
        st.info(f"B·∫°n d·ªãch c·ªßa b·∫°n c√≥ th·ªÉ ch·∫•p nh·∫≠n ƒë∆∞·ª£c v·ªõi ƒë·ªô ph√π h·ª£p {percent:.2f}%")
    else:
        st.info(f"B·∫£n d·ªãch c·ªßa b·∫°n ch·ªâ ch√≠nh x√°c {percent:.2f}%.")

    # N√∫t th·ª≠ l·∫°i
    col_left, col_right = st.columns([3, 1])
    with col_left:
        st.write("B·∫°n c√≥ mu·ªën th·ª≠ l·∫°i kh√¥ng?")
    with col_right:
        if st.button("üîÅ Th·ª≠ l·∫°i"):
            st.session_state.percentage_correct = None
            st.session_state.model_translation = None
            st.session_state.show_result = False
            st.session_state.comparison = None
            st.rerun()

    # Hi·ªÉn th·ªã b·∫£n d·ªãch h·ªá th·ªëng
    with st.expander("üëÅ Xem b·∫£n d·ªãch c·ªßa h·ªá th·ªëng?"):
        st.info(st.session_state.model_translation)
